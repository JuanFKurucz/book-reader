name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13'] # Test on the target version

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Add uv to PATH
      run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Create virtual environment
      run: uv venv

    - name: Install dependencies (including dev for pytest)
      run: |
        source .venv/bin/activate
        uv pip install -e ".[dev]"

    - name: Run Pytest with Coverage
      # Pass OPENAI_API_KEY as an env var if tests require it (even mocked ones might need the var set)
      # Use secrets for actual keys in real scenarios
      run: |
        source .venv/bin/activate
        uv run pytest --cov=src/book_reader --cov-report=xml
      env:
        OPENAI_API_KEY: 'test-key' # Use a dummy key

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Optional: Add Codecov token
        slug: ${{ github.repository }} # Automatically gets repo slug
